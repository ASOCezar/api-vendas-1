name: Dynamic Canary Deployment - DigitalOcean DOCR

on:
  push:
    branches: [master]

env:
  REGION: nyc3
  SIZE: s-1vcpu-1gb
  IMAGE: ubuntu-22-04-x64
  IMAGE_NAME: registry.digitalocean.com/${{ secrets.DOCR_REGISTRY }}/app:${{ github.sha }}
  HEALTH_RETRIES: 10
  HEALTH_DELAY: 10

jobs:
  build:
    name: Build and Push to DOCR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to DOCR
        run: echo "${{ secrets.DOCR_ACCESS_TOKEN }}" | docker login registry.digitalocean.com -u doctl --password-stdin

      - name: Build and Push Docker image
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  canary-deploy:
    name: Create and Deploy Canary
    runs-on: ubuntu-latest
    needs: build
    outputs:
      canary_ip: ${{ steps.get-ip.outputs.ip }}

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Create canary droplet
        run: |
          CANARY_NAME="canary-${{ github.run_id }}"
          echo "üöÄ Creating canary droplet $CANARY_NAME..."
          doctl compute droplet create $CANARY_NAME \
            --region $REGION \
            --size $SIZE \
            --image $IMAGE \
            --ssh-keys ${{ secrets.DO_SSH_FINGERPRINT }} \
            --tag-names canary \
            --wait

      - name: Get Canary IP
        id: get-ip
        run: |
          IP=$(doctl compute droplet list --tag-name canary --format PublicIPv4 --no-header | head -n 1)
          echo "Canary IP: $IP"
          echo "ip=$IP" >> $GITHUB_OUTPUT

      - name: Deploy Docker image to canary
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ steps.get-ip.outputs.ip }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            apt update -y && apt install -y docker.io
            docker login registry.digitalocean.com -u doctl -p "${{ secrets.DOCR_ACCESS_TOKEN }}"
            docker pull $IMAGE_NAME
            docker run -d --name app -p 80:80 $IMAGE_NAME
            echo "‚úÖ Canary deployed successfully"

  healthcheck:
    name: Health Check Canary
    runs-on: ubuntu-latest
    needs: canary-deploy
    steps:
      - name: Test Canary Health
        run: |
          IP=${{ needs.canary-deploy.outputs.canary_ip }}
          echo "üîç Checking health at http://$IP/health"
          for i in $(seq 1 $HEALTH_RETRIES); do
            if curl -fs http://$IP/health; then
              echo "‚úÖ Canary healthy after $i attempts"
              exit 0
            fi
            echo "Attempt $i failed, retrying in $HEALTH_DELAY seconds..."
            sleep $HEALTH_DELAY
          done
          echo "‚ùå Canary failed health check"
          exit 1
        env:
          HEALTH_RETRIES: ${{ env.HEALTH_RETRIES }}
          HEALTH_DELAY: ${{ env.HEALTH_DELAY }}

  promote:
    name: Promote to Production
    runs-on: ubuntu-latest
    needs: [canary-deploy, healthcheck]
    if: success()
    steps:
      - name: Deploy to production droplet
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DROPLET_PROD_1_IP }}
          username: root
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "üöÄ Promoting to production droplet..."
            docker login registry.digitalocean.com -u doctl -p "${{ secrets.DOCR_ACCESS_TOKEN }}"
            docker pull $IMAGE_NAME
            docker stop app || true
            docker rm app || true
            docker run -d --name app -p 80:80 $IMAGE_NAME
            echo "‚úÖ Production updated successfully"

  cleanup:
    name: Cleanup Canary
    runs-on: ubuntu-latest
    needs: [canary-deploy, healthcheck]
    if: always()
    steps:
      - name: Delete canary droplet
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - run: |
          echo "üßπ Removing canary droplet..."
          doctl compute droplet delete --tag-name canary --force
